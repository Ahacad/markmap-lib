import{_ as n,a,i as t,s as e,b as r,S as o,e as i,g as s,h as m,d as c,l as u,n as p,A as l,o as h,p as d,P as f,B as g}from"./client.fa549a1a.js";function k(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(n){return!1}}function v(n){var a;return{c:function(){a=i("main")},l:function(n){a=s(n,"MAIN",{}),m(a).forEach(c)},m:function(t,e){u(t,a,e),a.innerHTML='<h1 id="usage">Usage</h1>\n<h2 id="command-line">Command-line</h2>\n<p>Either install it globally:</p>\n<pre><code class="language-bash">$ npm i -g markmap-lib\n$ markmap my-markdown.md</code></pre>\n<p>or use with <code>npx</code>:</p>\n<pre><code class="language-bash">$ npx markmap-lib my-markdown.md</code></pre>\n<h2 id="programmatic-usage">Programmatic usage</h2>\n<p>Make sure there is an SVG element in your DOM, say:</p>\n<pre><code class="language-html">&lt;svg id=&quot;mindmap&quot; style=&quot;width: 800px; height: 800px&quot;&gt;&lt;/svg&gt;</code></pre>\n<p>then we can mount the markmap to it:</p>\n<pre><code class="language-js">import { transform } from &#39;markmap-lib/dist/transform.common&#39;;\nimport { markmap } from &#39;markmap-lib/dist/view.common&#39;;\n\nconst md = `\n# hello\n\n- This is my Markdown.\n`;\n\nconst data = transform(md);\nmarkmap(&#39;#mindmap&#39;, data);</code></pre>\n<h2 id="use-with-vim--neovim">Use with Vim / Neovim</h2>\n<p>See <a href="https://github.com/gera2ld/coc-markmap">coc-markmap</a>.</p>\n',n[1](a)},p:p,i:p,o:p,d:function(t){t&&c(a),n[1](null)}}}function y(n,a,t){var e;return l((function(){f.highlightAllUnder(e)})),[e,function(n){g[n?"unshift":"push"]((function(){t(0,e=n)}))}]}var b=function(i){n(c,o);var s,m=(s=c,function(){var n,a=h(s);if(k()){var t=h(this).constructor;n=Reflect.construct(a,arguments,t)}else n=a.apply(this,arguments);return d(this,n)});function c(n){var o;return a(this,c),o=m.call(this),t(r(o),n,y,v,e,{}),o}return c}();export default b;
