import{_ as n,a as t,i as a,s as r,b as e,S as o,e as i,g as s,h as c,d as m,l,n as u,A as p,o as d,p as f,P as h,B as g}from"./client.247b3718.js";function y(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(n){return!1}}function k(n){var t;return{c:function(){t=i("main")},l:function(n){t=s(n,"MAIN",{}),c(t).forEach(m)},m:function(a,r){l(a,t,r),t.innerHTML='<h1 id="usage">Usage</h1>\n<h2 id="command-line">Command-line</h2>\n<p>Either install it globally:</p>\n<pre><code class="language-bash">$ npm i -g markmap-lib\n$ markmap my-markdown.md</code></pre>\n<p>or use with <code>npx</code>:</p>\n<pre><code class="language-bash">$ npx markmap-lib my-markdown.md</code></pre>\n<h2 id="programmatical">Programmatical</h2>\n<p>Make sure there is an SVG element in your DOM, say:</p>\n<pre><code class="language-html">&lt;svg id=&quot;mindmap&quot; style=&quot;width: 800px; height: 800px&quot;&gt;&lt;/svg&gt;</code></pre>\n<p>then we can mount the markmap to it:</p>\n<pre><code class="language-js">import { transform } from &#39;markmap-lib/dist/transform.common&#39;;\nimport { markmap } from &#39;markmap-lib/dist/view.common&#39;;\n\nconst md = `\n# hello\n\n- This is my Markdown.\n`;\n\nconst data = transform(md);\nmarkmap(&#39;#mindmap&#39;, data);</code></pre>\n',n[1](t)},p:u,i:u,o:u,d:function(a){a&&m(t),n[1](null)}}}function v(n,t,a){var r;return p((function(){h.highlightAllUnder(r)})),[r,function(n){g[n?"unshift":"push"]((function(){a(0,r=n)}))}]}var b=function(i){n(m,o);var s,c=(s=m,function(){var n,t=d(s);if(y()){var a=d(this).constructor;n=Reflect.construct(t,arguments,a)}else n=t.apply(this,arguments);return f(this,n)});function m(n){var o;return t(this,m),o=c.call(this),a(e(o),n,v,k,r,{}),o}return m}();export default b;
